$frontPageColor:rgb(6, 24, 83);
$footerColor:white;

.close-modal{

  display: none;
}


@mixin modalOuterStyle(){
  position: fixed;
height: 100vh;
width: 100vw;
display: flex;
justify-content: center;
align-items: center;
z-index: 20;
box-sizing: border-box;
}


@mixin modalBlur(){
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(11, 11, 11, 0.78);
  z-index: 20;
}

@mixin modalInnerStyle(){
  width: 65%;
  height: 65%;
  margin-bottom: 0px;
  background-color: white;
  position: relative;
  z-index: 60;

}


@mixin frontPageFont($fontSize, $lineHeight){

    color:$frontPageColor;
    font-size: $fontSize;
    line-height: $lineHeight;
    font-weight: 600;
}

@mixin footerFont($fontSize, $lineHeight, $fontWeight){


    color:$footerColor;
    font-size: $fontSize;
    line-height: $lineHeight;
    font-weight: $fontWeight;

}


@mixin crossClose(){
    position: absolute;
    font-weight: 600;
    line-height:20px;
    padding: 0px !important;
    right: 1%;
    display: flex;
    align-items: center;
    cursor: pointer;

    &:hover{
        bottom: 1px;
        transform: rotate(360deg);
        transition: transform 1.2s ease-in-out;
    }
}

@mixin appearAnimationPop(){
    animation: pop-up 300ms linear;
    animation-fill-mode: backwards;

    @keyframes pop-up {
        0%{
            transform: scale(0.5);
            opacity: 0.5;
        }

        100%{
            transform: scale(1);
            opacity: 1;
        }
    }
}


@mixin appearAnimationPopRemove(){
    animation: pop-upnone 300ms linear;
    animation-fill-mode: backwards;

    @keyframes pop-upnone {
        0%{
            transform: scale(1);
            opacity: 1;
        }

        100%{
            transform: scale(0.5);
            opacity: 0.5;
        }
    }
}


$breakpoints: (
  "xs": "max-width: 575.98px",
  "sm": "min-width: 576px",
  "md": "min-width: 768px",
  "lg": "min-width: 992px",
  "xl": "min-width: 1200px"
);

@mixin breakpoint($name) {
  
  $breakpoint-value: map-get($breakpoints, $name);
  @if $breakpoint-value {
    @media (#{$breakpoint-value}) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$name}.";
  }
}

@mixin text-sizes($text-sizes...) {
  @if length($text-sizes) != length($breakpoints) {
    @warn "The number of font sizes provided does not match the number of breakpoints!";
  }

  $index: 1; // инициализируем индекс перед началом цикла
  @each $breakpoint, $breakpoint-value in $breakpoints {
    $text-size: nth($text-sizes, $index);
    @debug "Breakpoint: #{$breakpoint}, Index: #{$index}, Text Size: #{$text-size}"; 
    
    @include breakpoint($breakpoint) {
      font-size: $text-size !important;
    }

    $index: $index + 1; // увеличиваем индекс на 1 после каждой итерации
  }
}


@mixin crossSize(){
  @include text-sizes(18px, 20px, 22px, 24px, 26px)
}

@mixin modalMainHeading(){
  @include text-sizes(22px, 24px, 26px, 28px, 35px);
}

@mixin modalRegularHeading(){
  @include text-sizes(14px, 15px, 16px, 17px, 18px);
}

@mixin modalRegularText(){
  @include text-sizes(11px, 13px, 16px, 18px, 19px);
}





@function zip($lists...) {
  $zipped-list: ();
  $count: length(nth($lists, 1));
  
  @for $i from 1 through $count {
    $zipped-item: ();
    @each $list in $lists {
      $zipped-item: append($zipped-item, nth($list, $i));
    }
    $zipped-list: append($zipped-list, $zipped-item);
  }
  
  @return $zipped-list;
}